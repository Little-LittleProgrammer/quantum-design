// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: message.proto

package rum

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Category int32

const (
	// 未知
	Category_Category_Unknown Category = 0
	// 性能
	Category_Category_Performance Category = 1
	// 错误
	Category_Category_Error Category = 2
	// 行为
	Category_Category_Behaviour Category = 3
	Category_Category_Custom Category = 4
)

// Enum value maps for Category.
var (
	Category_name = map[int32]string{
		0: "Category_Unknown",
		1: "Category_Performance",
		2: "Category_Error",
		3: "Category_Behaviour",
		4: "Category_Custom",
	}
	Category_value = map[string]int32{
		"Category_Unknown":     0,
		"Category_Performance": 1,
		"Category_Error":       2,
		"Category_Behaviour":   3,
		"Category_Custom":      4,
	}
)

func (x Category) Enum() *Category {
	p := new(Category)
	*p = x
	return p
}

func (x Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Category) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (Category) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Category.Descriptor instead.
func (Category) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

type EffectiveType int32

const (
	EffectiveType_Network_Unknown EffectiveType = 0
	EffectiveType_Network_Wifi    EffectiveType = 1
	EffectiveType_Network_2G      EffectiveType = 2
	EffectiveType_Network_3G      EffectiveType = 3
	EffectiveType_Network_4G      EffectiveType = 4
)

// Enum value maps for EffectiveType.
var (
	EffectiveType_name = map[int32]string{
		0: "Network_Unknown",
		1: "Network_Wifi",
		2: "Network_2G",
		3: "Network_3G",
		4: "Network_4G",
	}
	EffectiveType_value = map[string]int32{
		"Network_Unknown": 0,
		"Network_Wifi":    1,
		"Network_2G":      2,
		"Network_3G":      3,
		"Network_4G":      4,
	}
)

func (x EffectiveType) Enum() *EffectiveType {
	p := new(EffectiveType)
	*p = x
	return p
}

func (x EffectiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EffectiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (EffectiveType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x EffectiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EffectiveType.Descriptor instead.
func (EffectiveType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

type SubCategory int32

const (
	// 未知
	SubCategory_Subtype_Known SubCategory = 0
	// 白屏时间/首次绘制
	SubCategory_FirstPaint SubCategory = 1
	// 首屏时间/首次内容绘制
	SubCategory_FirstContentulPaint SubCategory = 2
	// 最大内容绘制
	SubCategory_LargestContentfulPaint SubCategory = 3
	// 最大偏移量
	SubCategory_CumulativeLayoutShift SubCategory = 4
	// 首屏有意义绘制
	SubCategory_FirstMeaningPaint SubCategory = 5
	// 首次输入延迟
	SubCategory_FirstInputDelay SubCategory = 6
	// 页面数据
	SubCategory_Navigation SubCategory = 7
	// 资源
	SubCategory_Resource SubCategory = 9
	// 控制台错误
	SubCategory_ConsoleError SubCategory = 10
	// js报错
	SubCategory_JsError SubCategory = 11
	// 异步报错
	SubCategory_PromiseError SubCategory = 12
	// 资源请求错误
	SubCategory_ResourceError SubCategory = 13
	// vue错误
	SubCategory_VueError SubCategory = 14
	// 请求错误
	SubCategory_FETCH SubCategory = 15
	// 请求错误
	SubCategory_XHR SubCategory = 16
)

// Enum value maps for SubCategory.
var (
	SubCategory_name = map[int32]string{
		0:  "Subtype_Known",
		1:  "FirstPaint",
		2:  "FirstContentulPaint",
		3:  "LargestContentfulPaint",
		4:  "CumulativeLayoutShift",
		5:  "FirstMeaningPaint",
		6:  "FirstInputDelay",
		7:  "Navigation",
		9:  "Resource",
		10: "ConsoleError",
		11: "JsError",
		12: "PromiseError",
		13: "ResourceError",
		14: "VueError",
		15: "FETCH",
		16: "XHR",
	}
	SubCategory_value = map[string]int32{
		"Subtype_Known":          0,
		"FirstPaint":             1,
		"FirstContentulPaint":    2,
		"LargestContentfulPaint": 3,
		"CumulativeLayoutShift":  4,
		"FirstMeaningPaint":      5,
		"FirstInputDelay":        6,
		"Navigation":             7,
		"Resource":               9,
		"ConsoleError":           10,
		"JsError":                11,
		"PromiseError":           12,
		"ResourceError":          13,
		"VueError":               14,
		"FETCH":                  15,
		"XHR":                    16,
	}
)

func (x SubCategory) Enum() *SubCategory {
	p := new(SubCategory)
	*p = x
	return p
}

func (x SubCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[2].Descriptor()
}

func (SubCategory) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[2]
}

func (x SubCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubCategory.Descriptor instead.
func (SubCategory) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

// 行为等级
type SeverityLevel int32

const (
	SeverityLevel_Unknown SeverityLevel = 0
	SeverityLevel_Else    SeverityLevel = 1
	SeverityLevel_Error   SeverityLevel = 2
	SeverityLevel_Warning SeverityLevel = 3
	SeverityLevel_Info    SeverityLevel = 4
	SeverityLevel_Debug   SeverityLevel = 5
	// * 上报的错误等级
	SeverityLevel_Low      SeverityLevel = 6
	SeverityLevel_Normal   SeverityLevel = 7
	SeverityLevel_High     SeverityLevel = 8
	SeverityLevel_Critical SeverityLevel = 9
)

// Enum value maps for SeverityLevel.
var (
	SeverityLevel_name = map[int32]string{
		0: "Unknown",
		1: "Else",
		2: "Error",
		3: "Warning",
		4: "Info",
		5: "Debug",
		6: "Low",
		7: "Normal",
		8: "High",
		9: "Critical",
	}
	SeverityLevel_value = map[string]int32{
		"Unknown":  0,
		"Else":     1,
		"Error":    2,
		"Warning":  3,
		"Info":     4,
		"Debug":    5,
		"Low":      6,
		"Normal":   7,
		"High":     8,
		"Critical": 9,
	}
)

func (x SeverityLevel) Enum() *SeverityLevel {
	p := new(SeverityLevel)
	*p = x
	return p
}

func (x SeverityLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeverityLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[3].Descriptor()
}

func (SeverityLevel) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[3]
}

func (x SeverityLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeverityLevel.Descriptor instead.
func (SeverityLevel) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

type ReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportReply) Reset() {
	*x = ReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportReply) ProtoMessage() {}

func (x *ReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportReply.ProtoReflect.Descriptor instead.
func (*ReportReply) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

type ReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sdk版本
	SdkVer string `protobuf:"bytes,1,opt,name=sdk_ver,json=sdkVer,proto3" json:"sdk_ver,omitempty"`
	// sdk名称
	SdkName string `protobuf:"bytes,2,opt,name=sdk_name,json=sdkName,proto3" json:"sdk_name,omitempty"`
	// 上报id
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// 应用id
	AppId string `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// 用户id
	UserId string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 应用名称
	AppName string                `protobuf:"bytes,6,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Data    []*ReportRequest_Data `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
	// 网络
	NetworkInfo *ReportRequest_Networkinfo `protobuf:"bytes,8,opt,name=network_info,json=networkInfo,proto3" json:"network_info,omitempty"`
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *ReportRequest) GetSdkVer() string {
	if x != nil {
		return x.SdkVer
	}
	return ""
}

func (x *ReportRequest) GetSdkName() string {
	if x != nil {
		return x.SdkName
	}
	return ""
}

func (x *ReportRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReportRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ReportRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReportRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ReportRequest) GetData() []*ReportRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReportRequest) GetNetworkInfo() *ReportRequest_Networkinfo {
	if x != nil {
		return x.NetworkInfo
	}
	return nil
}

type ReportRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分类
	Category Category `protobuf:"varint,1,opt,name=category,proto3,enum=rum.Category" json:"category,omitempty"`
	// 子分类
	SubCategory SubCategory `protobuf:"varint,2,opt,name=sub_category,json=subCategory,proto3,enum=rum.SubCategory" json:"sub_category,omitempty"`
	// 页面地址
	PageUrl string `protobuf:"bytes,3,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	// 指标获取时间，ms级时间戳
	Time uint32 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	// 性能数据
	Performance *ReportRequest_Data_Performance `protobuf:"bytes,5,opt,name=performance,proto3,oneof" json:"performance,omitempty"`
	// 错误
	Error          *ReportRequest_Data_Error            `protobuf:"bytes,6,opt,name=error,proto3,oneof" json:"error,omitempty"`
	BreadcrumbData []*ReportRequest_Data_BreadcrumbData `protobuf:"bytes,7,rep,name=breadcrumb_data,json=breadcrumbData,proto3" json:"breadcrumb_data,omitempty"`
}

func (x *ReportRequest_Data) Reset() {
	*x = ReportRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest_Data) ProtoMessage() {}

func (x *ReportRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest_Data.ProtoReflect.Descriptor instead.
func (*ReportRequest_Data) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ReportRequest_Data) GetCategory() Category {
	if x != nil {
		return x.Category
	}
	return Category_Category_Unknown
}

func (x *ReportRequest_Data) GetSubCategory() SubCategory {
	if x != nil {
		return x.SubCategory
	}
	return SubCategory_Subtype_Known
}

func (x *ReportRequest_Data) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *ReportRequest_Data) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReportRequest_Data) GetPerformance() *ReportRequest_Data_Performance {
	if x != nil {
		return x.Performance
	}
	return nil
}

func (x *ReportRequest_Data) GetError() *ReportRequest_Data_Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ReportRequest_Data) GetBreadcrumbData() []*ReportRequest_Data_BreadcrumbData {
	if x != nil {
		return x.BreadcrumbData
	}
	return nil
}

type ReportRequest_Networkinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 网络状态
	EffectiveType EffectiveType `protobuf:"varint,1,opt,name=effective_type,json=effectiveType,proto3,enum=rum.EffectiveType" json:"effective_type,omitempty"`
	// 下载速度
	Downlink uint32 `protobuf:"varint,2,opt,name=downlink,proto3" json:"downlink,omitempty"`
	// 延迟
	Rtt uint32 `protobuf:"varint,3,opt,name=rtt,proto3" json:"rtt,omitempty"`
}

func (x *ReportRequest_Networkinfo) Reset() {
	*x = ReportRequest_Networkinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest_Networkinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest_Networkinfo) ProtoMessage() {}

func (x *ReportRequest_Networkinfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest_Networkinfo.ProtoReflect.Descriptor instead.
func (*ReportRequest_Networkinfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ReportRequest_Networkinfo) GetEffectiveType() EffectiveType {
	if x != nil {
		return x.EffectiveType
	}
	return EffectiveType_Network_Unknown
}

func (x *ReportRequest_Networkinfo) GetDownlink() uint32 {
	if x != nil {
		return x.Downlink
	}
	return 0
}

func (x *ReportRequest_Networkinfo) GetRtt() uint32 {
	if x != nil {
		return x.Rtt
	}
	return 0
}

type ReportRequest_Data_Performance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 开始时间: 如：400，单位ms
	StartTime *float64 `protobuf:"fixed64,1,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	// 渲染时间: 如 400
	RenderTime *float64 `protobuf:"fixed64,2,opt,name=render_time,json=renderTime,proto3,oneof" json:"render_time,omitempty"`
	// 偏移量
	Value *float64 `protobuf:"fixed64,3,opt,name=value,proto3,oneof" json:"value,omitempty"`
	// 延迟时间
	Duration *float64 `protobuf:"fixed64,4,opt,name=duration,proto3,oneof" json:"duration,omitempty"`
	// 延迟事件
	Name *string `protobuf:"bytes,5,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// 首次可交互时间
	Tti *float64 `protobuf:"fixed64,6,opt,name=tti,proto3,oneof" json:"tti,omitempty"`
	// HTML加载完成时间
	DomReady *float64 `protobuf:"fixed64,7,opt,name=dom_ready,json=domReady,proto3,oneof" json:"dom_ready,omitempty"`
	// 页面完全加载时间
	Load *float64 `protobuf:"fixed64,8,opt,name=load,proto3,oneof" json:"load,omitempty"`
	// 首包时间
	FirstByte *float64 `protobuf:"fixed64,9,opt,name=first_byte,json=firstByte,proto3,oneof" json:"first_byte,omitempty"`
	// dns查询耗时
	Dns *float64 `protobuf:"fixed64,10,opt,name=dns,proto3,oneof" json:"dns,omitempty"`
	// tcp连接时间
	Tcp *float64 `protobuf:"fixed64,11,opt,name=tcp,proto3,oneof" json:"tcp,omitempty"`
	// ssl完全连接耗时
	Ssl *float64 `protobuf:"fixed64,12,opt,name=ssl,proto3,oneof" json:"ssl,omitempty"`
	// 请求响应耗时
	Ttfb *float64 `protobuf:"fixed64,13,opt,name=ttfb,proto3,oneof" json:"ttfb,omitempty"`
	// 内容传输耗时
	Trans *float64 `protobuf:"fixed64,14,opt,name=trans,proto3,oneof" json:"trans,omitempty"`
	// dom解析耗时
	DomParse *float64 `protobuf:"fixed64,15,opt,name=dom_parse,json=domParse,proto3,oneof" json:"dom_parse,omitempty"`
	// 资源加载耗时
	Res *float64 `protobuf:"fixed64,16,opt,name=res,proto3,oneof" json:"res,omitempty"`
}

func (x *ReportRequest_Data_Performance) Reset() {
	*x = ReportRequest_Data_Performance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest_Data_Performance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest_Data_Performance) ProtoMessage() {}

func (x *ReportRequest_Data_Performance) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest_Data_Performance.ProtoReflect.Descriptor instead.
func (*ReportRequest_Data_Performance) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *ReportRequest_Data_Performance) GetStartTime() float64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetRenderTime() float64 {
	if x != nil && x.RenderTime != nil {
		return *x.RenderTime
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetDuration() float64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ReportRequest_Data_Performance) GetTti() float64 {
	if x != nil && x.Tti != nil {
		return *x.Tti
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetDomReady() float64 {
	if x != nil && x.DomReady != nil {
		return *x.DomReady
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetLoad() float64 {
	if x != nil && x.Load != nil {
		return *x.Load
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetFirstByte() float64 {
	if x != nil && x.FirstByte != nil {
		return *x.FirstByte
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetDns() float64 {
	if x != nil && x.Dns != nil {
		return *x.Dns
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetTcp() float64 {
	if x != nil && x.Tcp != nil {
		return *x.Tcp
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetSsl() float64 {
	if x != nil && x.Ssl != nil {
		return *x.Ssl
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetTtfb() float64 {
	if x != nil && x.Ttfb != nil {
		return *x.Ttfb
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetTrans() float64 {
	if x != nil && x.Trans != nil {
		return *x.Trans
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetDomParse() float64 {
	if x != nil && x.DomParse != nil {
		return *x.DomParse
	}
	return 0
}

func (x *ReportRequest_Data_Performance) GetRes() float64 {
	if x != nil && x.Res != nil {
		return *x.Res
	}
	return 0
}

type ReportRequest_Data_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误类型
	ErrorType *string `protobuf:"bytes,1,opt,name=errorType,proto3,oneof" json:"errorType,omitempty"`
	// 错误uid
	ErrorUid *string `protobuf:"bytes,2,opt,name=errorUid,proto3,oneof" json:"errorUid,omitempty"`
	// 错误消息
	Msg *string `protobuf:"bytes,3,opt,name=msg,proto3,oneof" json:"msg,omitempty"`
	// 错误栈
	StackTrace *float64 `protobuf:"fixed64,4,opt,name=stackTrace,proto3,oneof" json:"stackTrace,omitempty"`
	// 错误请求数据
	Request *ReportRequest_Data_Error_ErrorRequest `protobuf:"bytes,5,opt,name=request,proto3,oneof" json:"request,omitempty"`
	// 错误响应数据
	Response *ReportRequest_Data_Error_ErrorResponse `protobuf:"bytes,6,opt,name=response,proto3,oneof" json:"response,omitempty"`
	// 错误时长
	Duration *float32 `protobuf:"fixed32,7,opt,name=duration,proto3,oneof" json:"duration,omitempty"`
}

func (x *ReportRequest_Data_Error) Reset() {
	*x = ReportRequest_Data_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest_Data_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest_Data_Error) ProtoMessage() {}

func (x *ReportRequest_Data_Error) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest_Data_Error.ProtoReflect.Descriptor instead.
func (*ReportRequest_Data_Error) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *ReportRequest_Data_Error) GetErrorType() string {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ""
}

func (x *ReportRequest_Data_Error) GetErrorUid() string {
	if x != nil && x.ErrorUid != nil {
		return *x.ErrorUid
	}
	return ""
}

func (x *ReportRequest_Data_Error) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

func (x *ReportRequest_Data_Error) GetStackTrace() float64 {
	if x != nil && x.StackTrace != nil {
		return *x.StackTrace
	}
	return 0
}

func (x *ReportRequest_Data_Error) GetRequest() *ReportRequest_Data_Error_ErrorRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ReportRequest_Data_Error) GetResponse() *ReportRequest_Data_Error_ErrorResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ReportRequest_Data_Error) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

// 用户行为数据
type ReportRequest_Data_BreadcrumbData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string        `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Time     float32       `protobuf:"fixed32,2,opt,name=time,proto3" json:"time,omitempty"`
	Level    SeverityLevel `protobuf:"varint,3,opt,name=level,proto3,enum=rum.SeverityLevel" json:"level,omitempty"`
}

func (x *ReportRequest_Data_BreadcrumbData) Reset() {
	*x = ReportRequest_Data_BreadcrumbData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest_Data_BreadcrumbData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest_Data_BreadcrumbData) ProtoMessage() {}

func (x *ReportRequest_Data_BreadcrumbData) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest_Data_BreadcrumbData.ProtoReflect.Descriptor instead.
func (*ReportRequest_Data_BreadcrumbData) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 0, 2}
}

func (x *ReportRequest_Data_BreadcrumbData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ReportRequest_Data_BreadcrumbData) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReportRequest_Data_BreadcrumbData) GetLevel() SeverityLevel {
	if x != nil {
		return x.Level
	}
	return SeverityLevel_Unknown
}

// 错误元类型
// optional ErrorMate meta = 4;
//
//	message ErrorMate {
//	  optional string col = 1;
//	  optional string line = 2;
//	}
//
//	message stackTrace {
//	  optional repeated string frames
//	}
type ReportRequest_Data_Error_ErrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method *string `protobuf:"bytes,1,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Url    *string `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url,omitempty"`
	Body   *string `protobuf:"bytes,3,opt,name=body,proto3,oneof" json:"body,omitempty"`
}

func (x *ReportRequest_Data_Error_ErrorRequest) Reset() {
	*x = ReportRequest_Data_Error_ErrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest_Data_Error_ErrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest_Data_Error_ErrorRequest) ProtoMessage() {}

func (x *ReportRequest_Data_Error_ErrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest_Data_Error_ErrorRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest_Data_Error_ErrorRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 0, 1, 0}
}

func (x *ReportRequest_Data_Error_ErrorRequest) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *ReportRequest_Data_Error_ErrorRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ReportRequest_Data_Error_ErrorRequest) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

type ReportRequest_Data_Error_ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *int32  `protobuf:"varint,1,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Body   *string `protobuf:"bytes,2,opt,name=body,proto3,oneof" json:"body,omitempty"`
}

func (x *ReportRequest_Data_Error_ErrorResponse) Reset() {
	*x = ReportRequest_Data_Error_ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest_Data_Error_ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest_Data_Error_ErrorResponse) ProtoMessage() {}

func (x *ReportRequest_Data_Error_ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest_Data_Error_ErrorResponse.ProtoReflect.Descriptor instead.
func (*ReportRequest_Data_Error_ErrorResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 0, 1, 1}
}

func (x *ReportRequest_Data_Error_ErrorResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ReportRequest_Data_Error_ErrorResponse) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x72, 0x75, 0x6d, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0xf0, 0x10, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x64, 0x6b, 0x5f, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x64, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x64, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x41, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x75, 0x6d, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xe7, 0x0d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x72, 0x75, 0x6d, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x72, 0x75, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x0b, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x72, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x75, 0x6d, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x4f, 0x0a, 0x0f, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x75,
	0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x82, 0x05, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0a,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x74, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x05, 0x52, 0x03, 0x74, 0x74, 0x69, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x06, 0x52, 0x08,
	0x64, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x04, 0x6c, 0x6f, 0x61,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x08, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x42, 0x79, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0a, 0x52, 0x03,
	0x74, 0x63, 0x70, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x73, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x0b, 0x52, 0x03, 0x73, 0x73, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x74, 0x74, 0x66, 0x62, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0c, 0x52, 0x04, 0x74,
	0x74, 0x66, 0x62, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0d, 0x52, 0x05, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x0e, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x0f, 0x52, 0x03, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x74,
	0x69, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x6e, 0x73, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x74, 0x63, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x73, 0x6c, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x74, 0x74, 0x66, 0x62, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x72, 0x65, 0x73, 0x1a, 0xed, 0x04, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x21, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x55, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x04, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x72, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x05, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x48, 0x06, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x1a, 0x77, 0x0a, 0x0c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x59, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x6d, 0x73, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x6a, 0x0a, 0x0e, 0x42, 0x72, 0x65, 0x61,
	0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x6d, 0x2e,
	0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x76,
	0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a,
	0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x6d, 0x2e, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x74, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x72, 0x74, 0x74, 0x2a, 0x7b, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x10, 0x04, 0x2a, 0x66, 0x0a, 0x0d, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x57, 0x69, 0x66, 0x69, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x32, 0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x33, 0x47, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x34, 0x47, 0x10, 0x04, 0x2a, 0xb0, 0x02, 0x0a, 0x0b,
	0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x75, 0x6c,
	0x50, 0x61, 0x69, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x61, 0x72, 0x67, 0x65,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x66, 0x75, 0x6c, 0x50, 0x61, 0x69, 0x6e,
	0x74, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x53, 0x68, 0x69, 0x66, 0x74, 0x10, 0x04, 0x12, 0x15,
	0x0a, 0x11, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x6e, 0x74, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x61,
	0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x4a, 0x73,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6d, 0x69,
	0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x0d, 0x12, 0x0c, 0x0a, 0x08,
	0x56, 0x75, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x0e, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x45,
	0x54, 0x43, 0x48, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x48, 0x52, 0x10, 0x10, 0x2a, 0x80,
	0x01, 0x0a, 0x0d, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x45, 0x6c, 0x73, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x10, 0x06, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x69, 0x67,
	0x68, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x10,
	0x09, 0x42, 0x10, 0x5a, 0x0e, 0x72, 0x75, 0x6d, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x3b,
	0x72, 0x75, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_message_proto_goTypes = []interface{}{
	(Category)(0),                                  // 0: rum.Category
	(EffectiveType)(0),                             // 1: rum.EffectiveType
	(SubCategory)(0),                               // 2: rum.SubCategory
	(SeverityLevel)(0),                             // 3: rum.SeverityLevel
	(*ReportReply)(nil),                            // 4: rum.ReportReply
	(*ReportRequest)(nil),                          // 5: rum.ReportRequest
	(*ReportRequest_Data)(nil),                     // 6: rum.ReportRequest.Data
	(*ReportRequest_Networkinfo)(nil),              // 7: rum.ReportRequest.Networkinfo
	(*ReportRequest_Data_Performance)(nil),         // 8: rum.ReportRequest.Data.Performance
	(*ReportRequest_Data_Error)(nil),               // 9: rum.ReportRequest.Data.Error
	(*ReportRequest_Data_BreadcrumbData)(nil),      // 10: rum.ReportRequest.Data.BreadcrumbData
	(*ReportRequest_Data_Error_ErrorRequest)(nil),  // 11: rum.ReportRequest.Data.Error.ErrorRequest
	(*ReportRequest_Data_Error_ErrorResponse)(nil), // 12: rum.ReportRequest.Data.Error.ErrorResponse
}
var file_message_proto_depIdxs = []int32{
	6,  // 0: rum.ReportRequest.data:type_name -> rum.ReportRequest.Data
	7,  // 1: rum.ReportRequest.network_info:type_name -> rum.ReportRequest.Networkinfo
	0,  // 2: rum.ReportRequest.Data.category:type_name -> rum.Category
	2,  // 3: rum.ReportRequest.Data.sub_category:type_name -> rum.SubCategory
	8,  // 4: rum.ReportRequest.Data.performance:type_name -> rum.ReportRequest.Data.Performance
	9,  // 5: rum.ReportRequest.Data.error:type_name -> rum.ReportRequest.Data.Error
	10, // 6: rum.ReportRequest.Data.breadcrumb_data:type_name -> rum.ReportRequest.Data.BreadcrumbData
	1,  // 7: rum.ReportRequest.Networkinfo.effective_type:type_name -> rum.EffectiveType
	11, // 8: rum.ReportRequest.Data.Error.request:type_name -> rum.ReportRequest.Data.Error.ErrorRequest
	12, // 9: rum.ReportRequest.Data.Error.response:type_name -> rum.ReportRequest.Data.Error.ErrorResponse
	3,  // 10: rum.ReportRequest.Data.BreadcrumbData.level:type_name -> rum.SeverityLevel
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest_Networkinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest_Data_Performance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest_Data_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest_Data_BreadcrumbData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest_Data_Error_ErrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest_Data_Error_ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
